# 📄 .github/workflows/auto-sync.yml
# 自动从 upstream 仓库同步最新代码，提交 PR 并自动合并

name: 🔄 Auto Sync from Upstream

on:
  schedule:
    - cron: '0 2 * * *' # 每天北京时间 10:00（UTC+8）
  workflow_dispatch:   # 支持手动触发

jobs:
  sync:
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}  # 需要你在仓库 Secrets 里配置，PAT，需有 repo 权限

    steps:
      # 1. 检出自己的代码库，不自动使用默认 token
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 2. 设置提交身份为 github-actions[bot]
      - name: Set Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # 3. 添加 upstream 远程仓库并拉取最新数据
      - name: Add upstream remote and fetch
        run: |
          git remote add upstream https://github.com/youshandefeiyang/sub-web-modify.git
          git fetch upstream

      # 4. 检查 upstream/master 是否有新的提交
      - name: Check upstream changes
        id: check
        run: |
          git fetch upstream master
          COMMITS=$(git rev-list HEAD..upstream/master --count)
          echo "commits_ahead=$COMMITS" >> $GITHUB_OUTPUT

      # 5. 如果没有新提交，则跳过后续步骤
      - name: No updates, skip sync
        if: steps.check.outputs.commits_ahead == '0'
        run: echo "No updates from upstream."

      # 6. 有新提交则创建同步分支，切换并推送（必须先改 origin URL 加 token）
      - name: Create sync branch and push
        if: steps.check.outputs.commits_ahead != '0'
        run: |
          git checkout -B auto-sync-upstream upstream/master
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
          git push origin auto-sync-upstream --force

      # 7. 生成 commit 日志，用于 PR 描述
      - name: Generate commit log
        id: changelog
        if: steps.check.outputs.commits_ahead != '0'
        run: |
          LOG=$(git log --oneline HEAD..upstream/master)
          echo "log<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 8. 创建或更新同步 PR
      - name: Create Pull Request
        if: steps.check.outputs.commits_ahead != '0'
        id: create_pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_TOKEN }}
          title: "🔄 Sync from upstream/master"
          body: |
            Detected **${{ steps.check.outputs.commits_ahead }} new commit(s)** from upstream.

            ---
            **Commit log:**
            ```
            ${{ steps.changelog.outputs.log }}
            ```

            _This PR was generated automatically._
          head: ${{ github.actor }}:auto-sync-upstream
          base: master
          labels: |
            auto-sync
            ready-to-merge
            
      - name: Debug PR existence
        run: gh pr list --head auto-sync-upstream --state open
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          
      # 9. 启用 PR 自动合并（需要仓库分支保护允许 auto-merge）
      - name: Enable auto-merge for PR
        if: steps.check.outputs.commits_ahead != '0'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: squash
