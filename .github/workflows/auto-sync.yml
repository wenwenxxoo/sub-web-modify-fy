name: 🔄 Auto Sync from Upstream

# 定时触发：每天 UTC 2 点运行一次（即北京时间早上 10 点）
on:
  schedule:
    - cron: '0 2 * * *'
  # 允许手动触发
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest

    # 设置环境变量，GH_TOKEN 用于 gh cli 和 GitHub API 授权操作
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      # 1. 检出当前仓库代码（wenwenxxoo/sub-web-modify-fy）
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 2. 设置 Git 提交人身份（自动机器人）
      - name: Set Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # 3. 添加上游仓库（youshandefeiyang/sub-web-modify）为 remote，并拉取最新内容
      - name: Add upstream remote and fetch
        run: |
          git remote add upstream https://github.com/youshandefeiyang/sub-web-modify.git
          git fetch upstream

      # 4. 检查上游是否有新提交（HEAD..upstream/master）
      - name: Check upstream changes
        id: check
        run: |
          git fetch upstream master
          COMMITS=$(git rev-list HEAD..upstream/master --count)
          echo "commits_ahead=$COMMITS" >> $GITHUB_OUTPUT

      # 5. 如果没有新提交，跳过后续步骤
      - name: No updates, skip sync
        if: steps.check.outputs.commits_ahead == '0'
        run: echo "No updates from upstream."

      # 6. 如果有新提交，创建新分支 auto-sync-upstream 并强推到当前仓库
      - name: Create sync branch and push
        if: steps.check.outputs.commits_ahead != '0'
        run: |
          git checkout -B auto-sync-upstream upstream/master
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
          git push origin auto-sync-upstream --force

      # 7. 生成变更日志（用于 PR 描述）
      - name: Generate commit log
        id: changelog
        if: steps.check.outputs.commits_ahead != '0'
        run: |
          LOG=$(git log --oneline HEAD..upstream/master)
          echo "log<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 8. 创建或更新 PR，base=master，head=auto-sync-upstream
      - name: Create or update PR
        if: steps.check.outputs.commits_ahead != '0'
        id: create_pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_TOKEN }}
          title: "🔄 Sync from upstream/master"
          body: |
            Detected **${{ steps.check.outputs.commits_ahead }} new commit(s)** from upstream.

            ---
            **Commit log:**
            ```
            ${{ steps.changelog.outputs.log }}
            ```

            _This PR was generated automatically._
          head: auto-sync-upstream
          base: master
          labels: |
            auto-sync
            ready-to-merge

      # 9. 启用 PR 的自动合并功能（前提：仓库设置中允许 auto-merge）
      - name: Enable PR auto-merge
        if: steps.check.outputs.commits_ahead != '0'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: squash  # 可选值还有 merge / rebase
